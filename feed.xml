<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My Grocery Price Book Blog</title>
  <subtitle>The tech story behind the app and tools</subtitle>
  <id>http://blog.my-grocery-price-book.co.za/</id>
  <link href="http://blog.my-grocery-price-book.co.za/"/>
  <link href="http://blog.my-grocery-price-book.co.za/feed.xml" rel="self"/>
  <updated>2016-04-11T02:00:00+02:00</updated>
  <author>
    <name>Grant Petersen-Speelman</name>
  </author>
  <entry>
    <title>Writing jasmine test for reactjs components on Ruby on Rails</title>
    <link rel="alternate" href="http://blog.my-grocery-price-book.co.za/2016/04/11/jasmine-test-for-react-rails.html"/>
    <id>http://blog.my-grocery-price-book.co.za/2016/04/11/jasmine-test-for-react-rails.html</id>
    <published>2016-04-11T02:00:00+02:00</published>
    <updated>2016-04-11T09:15:37+02:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Now that I have manage to write a few components using reactjs/rails and 
I feel I understand the basics of reactjs, I wanted to be able to write tests for
my components. I looked into using &lt;a href="https://github.com/searls/jasmine-rails"&gt;jasmine-rails&lt;/a&gt;
for testing my components.&lt;/p&gt;

&lt;p&gt;Installing it was as simple as following the Gems &lt;a href="https://github.com/searls/jasmine-rails#installation"&gt;README&lt;/a&gt;.
You will need &lt;a href="http://phantomjs.org/"&gt;PhantomJS&lt;/a&gt; if you want to run your test headless (checkout out 
&lt;a href="https://github.com/searls/jasmine-rails#phantomjs-binary"&gt;phantomjs-binary&lt;/a&gt; and &lt;a href="https://rubygems.org/gems/phantomjs"&gt;phantomjs gem&lt;/a&gt; 
if not) otherwise visiting http://localhost:3000/specs can also be used.&lt;/p&gt;

&lt;p&gt;The next step was creating a helper js file to make &lt;a href="http://facebook.github.io/react/docs/test-utils.html"&gt;reactjs TestUtils&lt;/a&gt; 
available.
&lt;code&gt;spec/javascripts/helpers/default_helper.js&lt;/code&gt;&lt;/p&gt;

&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TestUtils&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TestUtils&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This made it possible to write my first test&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spec/javascripts/components/confirm_delete.js&lt;/code&gt;&lt;/p&gt;

&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ConfirmDelete'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;react_document&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dom_node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  
    &lt;span class="nx"&gt;beforeEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;react_document&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;TestUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;renderIntoDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ConfirmDelete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;modal_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"ten"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;dom_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findDOMNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;react_document&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  
    &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"works"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dom_node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nodeName&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DIV'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dom_node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ten'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One last hiccup was attempting to make my test files jsx. There seems to be a issue with
"sprockets 3" and "jasmine-rails" ( check out this 
&lt;a href="https://github.com/searls/jasmine-rails/issues/178"&gt;github issue&lt;/a&gt; for more details).
 In the mean time to work around this I downgraded my sprockets to 
 "gem 'sprockets', '~&amp;gt; 2.7'" and edited &lt;code&gt;jasmine.yml&lt;/code&gt; with the following:&lt;/p&gt;

&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;spec_files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;**/*[Ss]pec.{jsx,js}"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This allowed me to rename my test file to jsx and my test with the JSX syntax.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spec/javascripts/components/confirm_delete.jsx&lt;/code&gt;&lt;/p&gt;

&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ConfirmDelete'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;react_dom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dom_node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;beforeEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;react_dom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;TestUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;renderIntoDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ConfirmDelete&lt;/span&gt; &lt;span class="nx"&gt;modal_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ten"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;dom_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findDOMNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;react_dom&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"works"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dom_node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nodeName&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DIV'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dom_node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ten'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That is it :)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;More Reading on &lt;a href="http://jasmine.github.io/2.0/introduction.html"&gt;Jasmine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;More Reading on &lt;a href="http://facebook.github.io/react/docs/test-utils.html"&gt;reactjs TestUtils&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Acceptance testing multiple sessions/actors using capybara</title>
    <link rel="alternate" href="http://blog.my-grocery-price-book.co.za/2016/03/31/capybara-personas.html"/>
    <id>http://blog.my-grocery-price-book.co.za/2016/03/31/capybara-personas.html</id>
    <published>2016-03-31T02:00:00+02:00</published>
    <updated>2016-03-31T08:42:35+02:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I recently wanted to add functionality that would allow multiple shoppers to work on the same Price Book. 
I wanted to write my feature spec in such a way that it was obvious that there were multiple actors and it allowed me to 
easily capture common logic like signing in.&lt;/p&gt;

&lt;p&gt;I wanted to use 2 gems to archive this, obviously &lt;a href="https://github.com/jnicklas/capybara"&gt;capybara&lt;/a&gt; and secondly
&lt;a href="https://github.com/dockyard/capybara-email"&gt;capybara-email&lt;/a&gt; for emails&lt;/p&gt;

&lt;p&gt;I created a &lt;a href="https://gist.github.com/grantspeelman/cf1a333ea187285f6adfb1b929d3b198"&gt;base class&lt;/a&gt; I felt was independent 
of the app&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PersonaSession&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Capybara&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Capybara&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Email&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;

  &lt;span class="c1"&gt;# override to stop usage of global current_session&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;page&lt;/span&gt;
    &lt;span class="vi"&gt;@page&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="no"&gt;Capybara&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Capybara&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;current_driver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Capybara&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;click_link_in_email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;link_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;open_email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;action_mailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;default_url_options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:host&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;link_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;link_name&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="ss"&gt;:href&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"http://&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;visit&lt;/span&gt; &lt;span class="n"&gt;link_path&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;perform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;instance_exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I created a shopper specific class&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ShopperPersonaSession&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;PersonaSession&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:)&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="vi"&gt;@email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;
    &lt;span class="vi"&gt;@password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'password'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sign_up&lt;/span&gt;
    &lt;span class="n"&gt;visit&lt;/span&gt; &lt;span class="s1"&gt;'/shoppers/sign_up'&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;current_path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;try&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:include?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/shoppers/sign_up'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="vi"&gt;@email&lt;/span&gt;
    &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="vi"&gt;@password&lt;/span&gt;
    &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Password confirmation'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="vi"&gt;@password&lt;/span&gt;
    &lt;span class="n"&gt;click_button&lt;/span&gt; &lt;span class="s1"&gt;'Sign up'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This allowed me to write a test like this&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SharingAShoppingListTest&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;FeatureTest&lt;/span&gt;
  &lt;span class="n"&gt;setup&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="vi"&gt;@grant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ShopperPersonaSession&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;email: &lt;/span&gt;&lt;span class="s1"&gt;'grant@example.com'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@grant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sign_up&lt;/span&gt;
    &lt;span class="vi"&gt;@kate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ShopperPersonaSession&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;email: &lt;/span&gt;&lt;span class="s1"&gt;'kate@example.com'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s1"&gt;'Grant and kate work together on a shopping list'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="vi"&gt;@grant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;perform&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;click_link&lt;/span&gt; &lt;span class="s1"&gt;'Price Book'&lt;/span&gt;
      &lt;span class="n"&gt;click_link&lt;/span&gt; &lt;span class="s1"&gt;'Invite'&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'Kate'&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'kate@example.com'&lt;/span&gt;
      &lt;span class="n"&gt;click_button&lt;/span&gt; &lt;span class="s1"&gt;'Invite'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="vi"&gt;@kate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;perform&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;click_link_in_email&lt;/span&gt; &lt;span class="s1"&gt;'My Price Book'&lt;/span&gt;
      &lt;span class="n"&gt;sign_up&lt;/span&gt;
      &lt;span class="n"&gt;click_button&lt;/span&gt; &lt;span class="s1"&gt;'Accept'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="vi"&gt;@grant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;perform&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;click_link&lt;/span&gt; &lt;span class="s1"&gt;'Shopping List'&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'New Shopping List'&lt;/span&gt;
      &lt;span class="n"&gt;click_button&lt;/span&gt; &lt;span class="s1"&gt;'Edit Title'&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'Our Shopping'&lt;/span&gt;
      &lt;span class="n"&gt;click_button&lt;/span&gt; &lt;span class="s1"&gt;'Update'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;assert&lt;/span&gt; &lt;span class="vi"&gt;@grant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;has_css?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'span'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="s1"&gt;'Our Shopping'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;assert&lt;/span&gt; &lt;span class="vi"&gt;@grant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;has_no_css?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'span'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="s1"&gt;'Update Failed'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="vi"&gt;@kate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;perform&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;click_link&lt;/span&gt; &lt;span class="s1"&gt;'Shopping List'&lt;/span&gt;
      &lt;span class="n"&gt;click_link&lt;/span&gt; &lt;span class="s1"&gt;'Items'&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Item name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'bread'&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Unit'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'loaves'&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Amount'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'2'&lt;/span&gt;
      &lt;span class="n"&gt;click_button&lt;/span&gt; &lt;span class="s1"&gt;'Add'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;assert&lt;/span&gt; &lt;span class="vi"&gt;@kate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;has_content?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bread'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="vi"&gt;@grant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;click_link&lt;/span&gt; &lt;span class="s1"&gt;'Refresh'&lt;/span&gt;

    &lt;span class="n"&gt;assert&lt;/span&gt; &lt;span class="vi"&gt;@grant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;has_content?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bread'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Reactjs Shopping Lists</title>
    <link rel="alternate" href="http://blog.my-grocery-price-book.co.za/2016/03/23/reactjs-shopping-lists.html"/>
    <id>http://blog.my-grocery-price-book.co.za/2016/03/23/reactjs-shopping-lists.html</id>
    <published>2016-03-23T02:00:00+02:00</published>
    <updated>2016-03-24T20:06:32+02:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I have been recently trying out 
&lt;a href="https://facebook.github.io/react/"&gt;reactjs&lt;/a&gt; and decided to rebuild the shopping list section using it.
 &lt;a href="http://www.my-grocery-price-book.co.za/shopping_lists"&gt;give it a try&lt;/a&gt;, you can login as a Guest.&lt;/p&gt;

&lt;p&gt;To get started with react and rails I used a gem called &lt;a href="https://github.com/reactjs/react-rails"&gt;react-rails&lt;/a&gt;. 
The gem allows you to do server side rendering as well which I thought could be pretty useful. 
Getting everything setup was as simple as following their README and I was building react examples in no time.&lt;/p&gt;

&lt;p&gt;I also added &lt;a href="http://eslint.org/"&gt;eslint&lt;/a&gt; as a linting utility for my .jsx files. Getting this running required nodejs 
and npm. I managed to figure (with a bit of GoOgle) I could install what I needed globally using npm.&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g eslint eslint-config-standard eslint-plugin-standard eslint-plugin-react
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;once installed you create a &lt;a href="https://github.com/my-grocery-price-book/www/blob/1bc730bdb6e9cac48c254f10576f5b96e50336df/.eslintrc"&gt;.eslintrc&lt;/a&gt;
 file and run it as follows.&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;eslint app/assets/javascripts/**/*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All in all I am quite happy with the outcome of the shopping list and also really enjoying using reactjs. 
Next up is figuring out how to write jasmine tests for my react components.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Police your code with Rubocop</title>
    <link rel="alternate" href="http://blog.my-grocery-price-book.co.za/2015/11/03/police-your-code-with-rubocop.html"/>
    <id>http://blog.my-grocery-price-book.co.za/2015/11/03/police-your-code-with-rubocop.html</id>
    <published>2015-11-03T02:00:00+02:00</published>
    <updated>2016-01-29T17:57:50+02:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Keeping your code on a project in shape is a daily challenge but there is a a ruby gem called 
&lt;a href="https://github.com/bbatsov/rubocop"&gt;rubocop&lt;/a&gt; that can help you with this.
&lt;/p&gt;

&lt;p&gt;I have been using &lt;a href="https://github.com/bbatsov/rubocop"&gt;rubocop&lt;/a&gt; on the grocery app and a few other projects for a while 
now. It's is really a great tool to help keep your code quality in check. Rubocop is a Ruby static code analyzer that 
is based on the &lt;a href="https://github.com/bbatsov/ruby-style-guide"&gt;Ruby Style Guide&lt;/a&gt; and 
&lt;a href="https://github.com/bbatsov/rails-style-guide"&gt;Rails Style Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Getting started with it is real simple:&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;  gem install rubocop
  rubocop -R &lt;span class="c"&gt;# run inside your Rails Project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You might feel that some of these suggestions are splitting hairs. For example things such as single quotes vs double quotes, 
indentations and blank lines. These simple ones are usually easily fixed by using rubocop's builtin autofix functionality. 
Just run &lt;code&gt;rubocop -aR&lt;/code&gt; which will automatically update your code for these more simpler rules.&lt;/p&gt;

&lt;p&gt;Rules that you feel is against your personal style, eg documenting classes, methods should not start with "get" or 
"set" as it can easily be turned off or tuned by adding a .rubocop.yml to your project root folder.&lt;/p&gt;

&lt;p&gt;If you follow those guideslines and refactor accordly you should end with simpler, more readable and more maintainable
code.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Vagrant and Ansible the ultimate combo</title>
    <link rel="alternate" href="http://blog.my-grocery-price-book.co.za/2015/09/27/vagrant-and-ansible.html"/>
    <id>http://blog.my-grocery-price-book.co.za/2015/09/27/vagrant-and-ansible.html</id>
    <published>2015-09-27T02:00:00+02:00</published>
    <updated>2016-01-29T17:57:50+02:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;So for the last few months I have been using &lt;a href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; and 
&lt;a href="http://www.ansible.com/configuration-management"&gt;Ansible&lt;/a&gt; for any new projects that I have to work on. &lt;/p&gt;

&lt;p&gt;The idea behind vagrant is to allow you to isolate all the software requirements to run your code for different projects
inside separate virtual machines. Vagrant makes it easier to work on different projects with conflicting requirements by
isolating them in different virtual machines. For example, two different projects requiring different versions of MYSQL.
It also has the added benefit of not cluttering your actual machine with all the projects unique and different software 
requirements.&lt;/p&gt;

&lt;p&gt;Ansible is a powerful automation tool that allows you to easily setup new (and old) servers with the required
software it needs. This makes setting up new enviroments a breeze.&lt;/p&gt;

&lt;p&gt;The combination of Anisble and Vagrant is currently a real powerful way of setting up development
enviroments quickly. If you add the Ansible scripts to your source control, you will have the changing requirements
of your application setup in your source history.&lt;/p&gt;

&lt;p&gt;I have recently taken the challenge of destroying my virtual machines every Monday and rebuilding it using Vagrant and
 Ansible. The idea being that I should be able to continue working within minutes and if that is not the case, updating
 the Ansible scripts with the required changes. This will help me make sure anything important required to work on the
 project is in source control, whether that be code, data or software setup.&lt;/p&gt;

&lt;p&gt;This is currently my prefered method of working with the my-grocery-price-book-code. If you too are interested in this
sort of setup, I recommended you take a look at&lt;br /&gt;
&lt;a href="https://bitbucket.org/grantspeelman/my-grocery-price-book.co.za/src/d43c1610845416273530eb526e038c42bb70b813/Vagrantfile?at=master&amp;amp;fileviewer=file-view-default#Vagrantfile-120"&gt;Vagrantfile&lt;/a&gt;
and the
&lt;a href="https://bitbucket.org/grantspeelman/my-grocery-price-book.co.za/src/d43c1610845416273530eb526e038c42bb70b813/ansible/?at=master"&gt;Ansible Scripts&lt;/a&gt;
of the my grocery price book code.&lt;/p&gt;

&lt;p&gt;Also if you have not worked with either of the 2 before or would like to know more about them, I recommend you check
out their Getting Started pages:
&lt;a href="https://docs.vagrantup.com/v2/getting-started/"&gt;Vagrant&lt;/a&gt; and &lt;a href="http://docs.ansible.com/ansible/intro_getting_started.html"&gt;Ansible&lt;/a&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Current System Architecture</title>
    <link rel="alternate" href="http://blog.my-grocery-price-book.co.za/2015/09/09/system-architecture.html"/>
    <id>http://blog.my-grocery-price-book.co.za/2015/09/09/system-architecture.html</id>
    <published>2015-09-09T02:00:00+02:00</published>
    <updated>2016-01-29T17:57:50+02:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Having a system architecture might seem like overkill for this project, but I am hoping it will help me keep the
system in my head and help make more insightful decisions. &lt;/p&gt;

&lt;p&gt;I almost always find it easy to talk about system architecture when you have a diagram. So I decided to create one using
&lt;a href="https://www.draw.io/"&gt;draw.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="alt text" title="Grocery Price Book System Architecture" src="/images/GrocerySystemArch.svg" /&gt;&lt;/p&gt;

&lt;p&gt;So the goal is to link the traditional Grocery Price Book with the of Crowd Sourcing. This will hopefully make it
easier for people to share pricing information thus increasing the power of your Price Book.&lt;/p&gt;

&lt;p&gt;The system has been split into 2 main apps. The User Facing Price Book application part that will handle all the user 
specific information and a API to store all the pricing infomation. This should make it possible for vendors to load 
their pricing infomation into the API if they want to.This is all still mostly theory at the moment. 
Hoping to start eating my own dog food soon.&lt;/p&gt;

&lt;p&gt;On a slightly different note…&lt;/p&gt;

&lt;p&gt;I have recently completed 'viewing your prices' on the price book page which pulls its infomation from the API.
Things left to do is build the 'Shopping List' and completing the 'Price Compare' sections, then we should have 
our MVP.&lt;/p&gt;
</content>
  </entry>
</feed>
